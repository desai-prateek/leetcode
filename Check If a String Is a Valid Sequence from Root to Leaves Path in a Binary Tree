/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @param {number[]} arr
 * @return {boolean}
 */
var isValidSequence = function(root, arr) {
    return checkPath(root, arr, 0);
};

var checkPath = function(root, arr ,index) {
    if(root === null || index == arr.length)
        return false;
    if(root.left === null && root.right === null && root.val === arr[index] && index === arr.length-1)
        return true;
    return root.val === arr[index] && (checkPath(root.left, arr, index+1) || checkPath(root.right, arr, index+1));
}

Input: root = [0,1,0,0,1,0,null,null,1,0,0], arr = [0,1,0,1]
Output: true
Explanation: 
The path 0 -> 1 -> 0 -> 1 is a valid sequence (green color in the figure). 
Other valid sequences are: 
0 -> 1 -> 1 -> 0 
0 -> 0 -> 0

